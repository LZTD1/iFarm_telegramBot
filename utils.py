def format(input_string, settings_dict):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ö–æ–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏ —Å–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - input_string (str): –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –¥–ª—è –∑–∞–º–µ–Ω—ã.
    - settings_dict (dict): –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏, –≥–¥–µ –∫–ª—é—á–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º –≤ —Å—Ç—Ä–æ–∫–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - formatted_string (str): –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –∑–∞–º–µ–Ω–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è.

    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        input_string = "–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n{you_name}"
        settings_dict = {"you_name": "–ì—Ä–∏–≥–æ—Ä–∏–π"}
        formatted_string = format_settings_string(input_string, settings_dict)
        print(formatted_string)
    –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
    –ì—Ä–∏–≥–æ—Ä–∏–π
    """
    formatted_string = input_string.format(**settings_dict)
    return formatted_string

import re

import datetime

def unix_time_to_string(unix_time):
    dt = datetime.datetime.fromtimestamp(unix_time)
    return dt.strftime('%Y-%m-%d %H:%M')

def tagsToString( tags, tagsLocalization ):
    string = ""
    for val in tagsLocalization:
        if val in tags:
            string += tagsLocalization[val] + " "
    return string

def validate_email(email):
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ email
    pattern = r'^[\w\.-]+@[\w\.-]+\.\w+$'

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ —Å email
    if re.match(pattern, email):
        return True
    else:
        return False

def getEmoj(country):
    if country == 0:
        return "üá∑üá∫"
    elif country == 1:
        return "üá∫üá≤"
    elif country == 2:
        return "üá®üá≥"
    else:
        return False